name: Build - Dev

# on:
#   push:
#     branches:
#       - main
#     paths-ignore:
#       - 'k8s/**'

on: workflow_dispatch



jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v3
        with:
          repository: Maersk-Global/sre-perf-ls-core-service

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -Pgpr.user=${{ secrets.GIT_USER }} -Pgpr.token=${{ secrets.GIT_PASSWORD }} -x test

      - name: Docker Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: crgazweloadstardev01.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: |
          
          docker build -f Dockerfile-dev . -t crgazweloadstardev01.azurecr.io/sre-perf-ls-core-service:${{ github.sha }} 
          docker push crgazweloadstardev01.azurecr.io/sre-perf-ls-core-service:${{ github.sha }}

      - name: Checkout GitHub Action
        uses: actions/checkout@v3
        with:
          repository: Maersk-Global/sre-perf-ls-core-service
          ref: main

      - name: Update files with new image tag
        run: |
          sed -i 's|crgazweloadstardev01.azurecr.io/sre-perf-ls-core-service:[^"]*|crgazweloadstardev01.azurecr.io/sre-perf-ls-core-service:${{ github.sha }}|g' ./k8s/dev/deployment.yaml

      - name: Commit and push changes to target repository
        run: |
          git config --global user.name "prmuthu"
          git config --global user.email "muthukumar.rajendran@maersk.com"
          git add ./k8s/dev/deployment.yaml
          git commit -m "Updated image tag"
          git push

      - name: Login k8s
        uses: Maersk-Global/github-actions-commons/kubectl-login@main
        with:
          k8s-cluster: ${{ secrets.AZURE_K8S_DEV_CLUSTER }}
          vault-name: ${{ secrets.VAULT_NAME }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-role-secret: ${{ secrets.VAULT_ROLE_SECRET }}

      - name: Deploy
        run: |
          kubectl apply -k ./k8s/dev/
